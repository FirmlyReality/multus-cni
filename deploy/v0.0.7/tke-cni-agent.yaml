---
apiVersion: rbac.authorization.k8s.io/v1
# kubernetes versions before 1.8.0 should use rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: tke-cni-clusterrole
rules:
- apiGroups: [""]
  resources:
  - pods
  - pods/status
  verbs: ["get", "update"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tke-cni
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
# kubernetes versions before 1.8.0 should use rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: tke-cni-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tke-cni-clusterrole
subjects:
- kind: ServiceAccount
  name: tke-cni
  namespace: kube-system
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: tke-cni-agent
  namespace: kube-system
  labels:
    k8s-app: tke-cni-agent
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "10%"
  selector:
    matchLabels:
      k8s-app: tke-cni-agent
  template:
    metadata:
      labels:
        k8s-app: tke-cni-agent
    spec:
      serviceAccountName: "tke-cni"
      hostNetwork: true
      terminationGracePeriodSeconds: 0
      tolerations:
        - operator: Exists
      containers:
      - image: ccr.ccs.tencentyun.com/tkeimages/tke-cni-agent:v0.0.7
        imagePullPolicy: Always
        name: tke-cni-agent
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
        - mountPath: /host/etc/kubernetes/
          name: kube-conf-dir
        - mountPath: /etc/tke-cni-agent-conf
          name: tke-cni-agent-conf
      volumes:
      - name: cni-bin-dir
        hostPath:
          path: /opt/cni/bin
      - name: cni-net-dir
        hostPath:
          path: /etc/cni/net.d
      - name: kube-conf-dir
        hostPath:
          path: /etc/kubernetes
      - configMap:
          defaultMode: 420
          name: tke-cni-agent-conf
        name: tke-cni-agent-conf
---
apiVersion: v1
data:
  00-multus.conf: |
    {
      "cniVersion": "0.3.1",
      "name": "multus-cni",
      "type": "multus",
      "kubeconfig": "/etc/kubernetes/tke-cni-kubeconfig",
      "logLevel": "info",
      "defaultDelegates": "tke-bridge",
      "capabilities": {
        "bandwidth": true,
        "portMappings": true
      }
    }
kind: ConfigMap
metadata:
  name: tke-cni-agent-conf
  namespace: kube-system
